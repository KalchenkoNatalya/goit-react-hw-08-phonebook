{"version":3,"file":"static/js/849.b0ee3767.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/FormAddContacts/FormAddContacts.module.css?70a8","components/FormAddContacts/FormAddContacts.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"item\":\"ContactList_item__EZYHO\",\"contactText\":\"ContactList_contactText__mBjoQ\",\"btnRemove\":\"ContactList_btnRemove__PnhLM\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({ contacts, onRemoveContacts }) => {\n  return (\n    <ul className={css.contactList}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.item}>\n          <p className={css.contactText}>\n            {contact.name}: {contact.number}\n          </p>\n          <button\n            onClick={() => onRemoveContacts(contact.id)}\n            className={css.btnRemove}\n            aria-label=\"Delete contact\"\n          >\n             &times;\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onRemoveContacts: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fromfilter } from 'redux/contactsReduser';\n\nexport const Filter = ({ valueFilter }) => {\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    dispatch(fromfilter(event.target.value));\n  };\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      className={css.filterInput}\n      value={valueFilter}\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      onChange={changeFilter}\n    />\n  );\n};\n\nFilter.propTypes = {\n  valueFilter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formAddContacts\":\"FormAddContacts_formAddContacts__hxLv9\",\"btnAddContact\":\"FormAddContacts_btnAddContact__tvsHN\"};","import css from './FormAddContacts.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk, selectUserContacts } from 'redux/contactsReduser';\n\nexport const FormAddContacts = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.contactName.value;\n    const number = form.elements.contactNumber.value;\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists `);\n    dispatch(addContactThunk({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleAddContact} className={css.formAddContacts}>\n      <label>\n        <p>Name</p>\n        <input name=\"contactName\" type=\"text\" required></input>\n      </label>\n      <label>\n        <p>Number</p>\n        <input name=\"contactNumber\" type=\"text\" required></input>\n      </label>\n      <button className={css.btnAddContact} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nFormAddContacts.propTypes = {\n  state: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  handleAddContact: PropTypes.func,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContacts = state => state.contacts.contacts;\nconst selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts; // Повернути всі контакти, якщо фільтр не вибраний\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { FormAddContacts } from 'components/FormAddContacts/FormAddContacts';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selecAuthentificated } from 'redux/authReducer';\nimport {\n  deleteContactThunk,\n  requestContatsThunk,\n  selectContactsError,\n  selectContactsIsLoading,\n  selectFilterContacts,\n  selectUserContacts,\n} from 'redux/contactsReduser';\nimport { selectVisibleContacts } from 'redux/selectors';\n// import Modal from 'react-modal';\n\n\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selecAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectFilterContacts);\n  const filteredContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n    dispatch(requestContatsThunk());\n  }, [authentificated, dispatch]);\n\n\n  const handleDeleteContact =  contactId => {\n    console.log(contactId);\n    \n    dispatch(deleteContactThunk(contactId));\n  };\n\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  return (\n    <section>\n  \n      <FormAddContacts />\n      <div>\n        {isLoading && <Loader />}\n        {error && <p>Error: {error}</p>}\n\n        <h2>Find contacts by name</h2>\n        <Filter valueFilter={filter} />\n\n        <h2>Your contacts list</h2>\n\n        {showContacts &&\n          (filter === '' ? (\n            <ContactList\n              contacts={contacts}\n              onRemoveContacts={contactId => handleDeleteContact(contactId)}\n            />\n          ) : (\n            <ContactList contacts={filteredContacts} />\n          ))}\n      </div>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactList","contacts","onRemoveContacts","className","css","map","contact","name","number","onClick","id","Filter","valueFilter","dispatch","useDispatch","type","value","pattern","title","onChange","event","fromfilter","target","FormAddContacts","useSelector","selectUserContacts","onSubmit","preventDefault","form","currentTarget","elements","contactName","contactNumber","some","alert","addContactThunk","reset","required","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectVisibleContacts","state","filter","toLowerCase","includes","authentificated","selecAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","selectFilterContacts","filteredContacts","useEffect","requestContatsThunk","showContacts","Loader","contactId","console","log","deleteContactThunk","handleDeleteContact"],"sourceRoot":""}